//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.3.0
//     from Assets/Settings/Input/InputSystemActions.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @InputSystemActions : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @InputSystemActions()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""InputSystemActions"",
    ""maps"": [
        {
            ""name"": ""GamePlay"",
            ""id"": ""a64ff132-3e66-49d8-b084-829c423a46f4"",
            ""actions"": [
                {
                    ""name"": ""Atack"",
                    ""type"": ""Button"",
                    ""id"": ""526a0422-db52-4a0c-aabe-af21e31262e9"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Movement"",
                    ""type"": ""Value"",
                    ""id"": ""86ee75fd-12b7-478f-b4ec-060c7fca574d"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Jump"",
                    ""type"": ""Button"",
                    ""id"": ""1486f032-3ad6-44ce-88ac-d0e18769f4c7"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Interact"",
                    ""type"": ""Button"",
                    ""id"": ""4417240f-27ed-4eea-ad22-6a4f32bec5ec"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Run"",
                    ""type"": ""PassThrough"",
                    ""id"": ""463dda0e-bd4a-428c-ab5a-16cef0bdcd2e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Crouch"",
                    ""type"": ""Button"",
                    ""id"": ""052e5b0e-fbd6-4122-b50e-3306bf36a27a"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Recharge"",
                    ""type"": ""Button"",
                    ""id"": ""05092d54-97a9-4304-af06-5c570b3b8ce4"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Heal"",
                    ""type"": ""Button"",
                    ""id"": ""27e5c488-8956-416e-89a4-94d8942a2c63"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MeleAtack"",
                    ""type"": ""Button"",
                    ""id"": ""e1e4f1cd-3120-49dc-a98f-eb916cccbcf1"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ChangeScene"",
                    ""type"": ""Button"",
                    ""id"": ""d706e5d3-aaba-4d98-9fa3-6911839d0a52"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ChangeWeapon1"",
                    ""type"": ""Button"",
                    ""id"": ""9bb358b3-40a8-4102-8fb9-04fe80f19cf2"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""ChangeWeapon2"",
                    ""type"": ""Button"",
                    ""id"": ""7b7c874a-78d9-4f63-a912-217009c79ae9"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""StaminaFull"",
                    ""type"": ""Button"",
                    ""id"": ""d96c90ce-1090-4ed5-ad12-51a00a4ff0af"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ChangeWeapons"",
                    ""type"": ""Value"",
                    ""id"": ""f47c596d-52a5-4e19-bfa7-721060cc459c"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""c0b0bf12-97e9-4511-afbf-cee3e064697b"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Atack"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f06f8c22-0aac-47a1-8231-754f497e63b3"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Interact"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""See"",
                    ""id"": ""eed3f231-4206-4344-9ca8-ea959e7b9716"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""Up"",
                    ""id"": ""0c3ef4d8-d1e7-49ef-8ed0-af169f8f5572"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Down"",
                    ""id"": ""b747218d-7bce-45f2-8eb1-0fbfb9dbb10d"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Left"",
                    ""id"": ""5388d7df-2e8e-4c3e-a47f-4ac999f1dac7"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Right"",
                    ""id"": ""d62018ac-8dad-49b4-a6ab-eced80c9d200"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""4662ea02-38c2-4f8c-a43d-a890760c4b3d"",
                    ""path"": ""<Keyboard>/leftShift"",
                    ""interactions"": ""Press"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Run"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""67e79f7a-7ae1-4b6b-bcf5-07f1b641f925"",
                    ""path"": ""<Keyboard>/ctrl"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Crouch"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ca2a491c-3aaf-4677-9bc6-dbfdf1f2334a"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": ""Press"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""848ec67d-a263-4a81-a696-df27a832cbfc"",
                    ""path"": ""<Keyboard>/r"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Recharge"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d24f3389-30be-47c5-a96c-153740ba7030"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Heal"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""40a14370-92c7-4e24-acfa-bee99cd78851"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MeleAtack"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""58f69e73-6af2-4910-b705-447950edb95e"",
                    ""path"": ""<Keyboard>/x"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ChangeScene"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b35d3843-028c-4f18-b04d-c11634c84ce8"",
                    ""path"": ""<Keyboard>/1"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ChangeWeapon1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""312c2798-963d-4b62-976c-b4192947dc3b"",
                    ""path"": ""<Keyboard>/2"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ChangeWeapon2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6efcdce0-ca37-45b8-92bb-596479abd02f"",
                    ""path"": ""<Keyboard>/z"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""StaminaFull"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8593e81d-5f41-4ab3-b836-4548cc85ea31"",
                    ""path"": ""<Mouse>/scroll/y"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ChangeWeapons"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Menus&Pause"",
            ""id"": ""666107a3-0ab3-4f70-8554-5b5430ee0373"",
            ""actions"": [
                {
                    ""name"": ""Pause"",
                    ""type"": ""Button"",
                    ""id"": ""4114c800-b863-4471-b669-6aa3b1a64006"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""746997c7-e69c-4828-85cd-85381f9b5dc0"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Pause"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""BossTest"",
            ""id"": ""59ca4020-6d61-45c5-b53c-7a3448ed2d4b"",
            ""actions"": [
                {
                    ""name"": ""1"",
                    ""type"": ""Button"",
                    ""id"": ""bea6cca7-0a23-40a3-aaef-aad1b664fc68"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""2"",
                    ""type"": ""Button"",
                    ""id"": ""fe2a556f-a6fa-4805-8bb7-2a74e203f020"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""3"",
                    ""type"": ""Button"",
                    ""id"": ""0b2a5183-8632-436b-a21b-1ef5c659c755"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""4"",
                    ""type"": ""Button"",
                    ""id"": ""25c09b00-798a-49e6-905b-a93316fd1f27"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""5"",
                    ""type"": ""Button"",
                    ""id"": ""a8f50f15-00b6-49eb-9389-3999979afc10"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""6"",
                    ""type"": ""Button"",
                    ""id"": ""693900f4-d28c-4bb5-b99e-d442fb995718"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""4d6c78e4-3915-4998-9e2d-353944509d6b"",
                    ""path"": ""<Keyboard>/t"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""dd88ac04-8ab6-4b3a-bb10-07535f7275d5"",
                    ""path"": ""<Keyboard>/y"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""160f6f35-2d50-4ca8-885c-f040594791d8"",
                    ""path"": ""<Keyboard>/u"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""3"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3ba0f6d5-31fd-446b-8eeb-07d6cb570f88"",
                    ""path"": ""<Keyboard>/i"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""4"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""577767f8-9259-473d-9223-56b9a25a471c"",
                    ""path"": ""<Keyboard>/o"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""5"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""361b2e52-3920-43c8-8c64-b3a46e2ee767"",
                    ""path"": ""<Keyboard>/p"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""6"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // GamePlay
        m_GamePlay = asset.FindActionMap("GamePlay", throwIfNotFound: true);
        m_GamePlay_Atack = m_GamePlay.FindAction("Atack", throwIfNotFound: true);
        m_GamePlay_Movement = m_GamePlay.FindAction("Movement", throwIfNotFound: true);
        m_GamePlay_Jump = m_GamePlay.FindAction("Jump", throwIfNotFound: true);
        m_GamePlay_Interact = m_GamePlay.FindAction("Interact", throwIfNotFound: true);
        m_GamePlay_Run = m_GamePlay.FindAction("Run", throwIfNotFound: true);
        m_GamePlay_Crouch = m_GamePlay.FindAction("Crouch", throwIfNotFound: true);
        m_GamePlay_Recharge = m_GamePlay.FindAction("Recharge", throwIfNotFound: true);
        m_GamePlay_Heal = m_GamePlay.FindAction("Heal", throwIfNotFound: true);
        m_GamePlay_MeleAtack = m_GamePlay.FindAction("MeleAtack", throwIfNotFound: true);
        m_GamePlay_ChangeScene = m_GamePlay.FindAction("ChangeScene", throwIfNotFound: true);
        m_GamePlay_ChangeWeapon1 = m_GamePlay.FindAction("ChangeWeapon1", throwIfNotFound: true);
        m_GamePlay_ChangeWeapon2 = m_GamePlay.FindAction("ChangeWeapon2", throwIfNotFound: true);
        m_GamePlay_StaminaFull = m_GamePlay.FindAction("StaminaFull", throwIfNotFound: true);
        m_GamePlay_ChangeWeapons = m_GamePlay.FindAction("ChangeWeapons", throwIfNotFound: true);
        // Menus&Pause
        m_MenusPause = asset.FindActionMap("Menus&Pause", throwIfNotFound: true);
        m_MenusPause_Pause = m_MenusPause.FindAction("Pause", throwIfNotFound: true);
        // BossTest
        m_BossTest = asset.FindActionMap("BossTest", throwIfNotFound: true);
        m_BossTest__1 = m_BossTest.FindAction("1", throwIfNotFound: true);
        m_BossTest__2 = m_BossTest.FindAction("2", throwIfNotFound: true);
        m_BossTest__3 = m_BossTest.FindAction("3", throwIfNotFound: true);
        m_BossTest__4 = m_BossTest.FindAction("4", throwIfNotFound: true);
        m_BossTest__5 = m_BossTest.FindAction("5", throwIfNotFound: true);
        m_BossTest__6 = m_BossTest.FindAction("6", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // GamePlay
    private readonly InputActionMap m_GamePlay;
    private IGamePlayActions m_GamePlayActionsCallbackInterface;
    private readonly InputAction m_GamePlay_Atack;
    private readonly InputAction m_GamePlay_Movement;
    private readonly InputAction m_GamePlay_Jump;
    private readonly InputAction m_GamePlay_Interact;
    private readonly InputAction m_GamePlay_Run;
    private readonly InputAction m_GamePlay_Crouch;
    private readonly InputAction m_GamePlay_Recharge;
    private readonly InputAction m_GamePlay_Heal;
    private readonly InputAction m_GamePlay_MeleAtack;
    private readonly InputAction m_GamePlay_ChangeScene;
    private readonly InputAction m_GamePlay_ChangeWeapon1;
    private readonly InputAction m_GamePlay_ChangeWeapon2;
    private readonly InputAction m_GamePlay_StaminaFull;
    private readonly InputAction m_GamePlay_ChangeWeapons;
    public struct GamePlayActions
    {
        private @InputSystemActions m_Wrapper;
        public GamePlayActions(@InputSystemActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @Atack => m_Wrapper.m_GamePlay_Atack;
        public InputAction @Movement => m_Wrapper.m_GamePlay_Movement;
        public InputAction @Jump => m_Wrapper.m_GamePlay_Jump;
        public InputAction @Interact => m_Wrapper.m_GamePlay_Interact;
        public InputAction @Run => m_Wrapper.m_GamePlay_Run;
        public InputAction @Crouch => m_Wrapper.m_GamePlay_Crouch;
        public InputAction @Recharge => m_Wrapper.m_GamePlay_Recharge;
        public InputAction @Heal => m_Wrapper.m_GamePlay_Heal;
        public InputAction @MeleAtack => m_Wrapper.m_GamePlay_MeleAtack;
        public InputAction @ChangeScene => m_Wrapper.m_GamePlay_ChangeScene;
        public InputAction @ChangeWeapon1 => m_Wrapper.m_GamePlay_ChangeWeapon1;
        public InputAction @ChangeWeapon2 => m_Wrapper.m_GamePlay_ChangeWeapon2;
        public InputAction @StaminaFull => m_Wrapper.m_GamePlay_StaminaFull;
        public InputAction @ChangeWeapons => m_Wrapper.m_GamePlay_ChangeWeapons;
        public InputActionMap Get() { return m_Wrapper.m_GamePlay; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(GamePlayActions set) { return set.Get(); }
        public void SetCallbacks(IGamePlayActions instance)
        {
            if (m_Wrapper.m_GamePlayActionsCallbackInterface != null)
            {
                @Atack.started -= m_Wrapper.m_GamePlayActionsCallbackInterface.OnAtack;
                @Atack.performed -= m_Wrapper.m_GamePlayActionsCallbackInterface.OnAtack;
                @Atack.canceled -= m_Wrapper.m_GamePlayActionsCallbackInterface.OnAtack;
                @Movement.started -= m_Wrapper.m_GamePlayActionsCallbackInterface.OnMovement;
                @Movement.performed -= m_Wrapper.m_GamePlayActionsCallbackInterface.OnMovement;
                @Movement.canceled -= m_Wrapper.m_GamePlayActionsCallbackInterface.OnMovement;
                @Jump.started -= m_Wrapper.m_GamePlayActionsCallbackInterface.OnJump;
                @Jump.performed -= m_Wrapper.m_GamePlayActionsCallbackInterface.OnJump;
                @Jump.canceled -= m_Wrapper.m_GamePlayActionsCallbackInterface.OnJump;
                @Interact.started -= m_Wrapper.m_GamePlayActionsCallbackInterface.OnInteract;
                @Interact.performed -= m_Wrapper.m_GamePlayActionsCallbackInterface.OnInteract;
                @Interact.canceled -= m_Wrapper.m_GamePlayActionsCallbackInterface.OnInteract;
                @Run.started -= m_Wrapper.m_GamePlayActionsCallbackInterface.OnRun;
                @Run.performed -= m_Wrapper.m_GamePlayActionsCallbackInterface.OnRun;
                @Run.canceled -= m_Wrapper.m_GamePlayActionsCallbackInterface.OnRun;
                @Crouch.started -= m_Wrapper.m_GamePlayActionsCallbackInterface.OnCrouch;
                @Crouch.performed -= m_Wrapper.m_GamePlayActionsCallbackInterface.OnCrouch;
                @Crouch.canceled -= m_Wrapper.m_GamePlayActionsCallbackInterface.OnCrouch;
                @Recharge.started -= m_Wrapper.m_GamePlayActionsCallbackInterface.OnRecharge;
                @Recharge.performed -= m_Wrapper.m_GamePlayActionsCallbackInterface.OnRecharge;
                @Recharge.canceled -= m_Wrapper.m_GamePlayActionsCallbackInterface.OnRecharge;
                @Heal.started -= m_Wrapper.m_GamePlayActionsCallbackInterface.OnHeal;
                @Heal.performed -= m_Wrapper.m_GamePlayActionsCallbackInterface.OnHeal;
                @Heal.canceled -= m_Wrapper.m_GamePlayActionsCallbackInterface.OnHeal;
                @MeleAtack.started -= m_Wrapper.m_GamePlayActionsCallbackInterface.OnMeleAtack;
                @MeleAtack.performed -= m_Wrapper.m_GamePlayActionsCallbackInterface.OnMeleAtack;
                @MeleAtack.canceled -= m_Wrapper.m_GamePlayActionsCallbackInterface.OnMeleAtack;
                @ChangeScene.started -= m_Wrapper.m_GamePlayActionsCallbackInterface.OnChangeScene;
                @ChangeScene.performed -= m_Wrapper.m_GamePlayActionsCallbackInterface.OnChangeScene;
                @ChangeScene.canceled -= m_Wrapper.m_GamePlayActionsCallbackInterface.OnChangeScene;
                @ChangeWeapon1.started -= m_Wrapper.m_GamePlayActionsCallbackInterface.OnChangeWeapon1;
                @ChangeWeapon1.performed -= m_Wrapper.m_GamePlayActionsCallbackInterface.OnChangeWeapon1;
                @ChangeWeapon1.canceled -= m_Wrapper.m_GamePlayActionsCallbackInterface.OnChangeWeapon1;
                @ChangeWeapon2.started -= m_Wrapper.m_GamePlayActionsCallbackInterface.OnChangeWeapon2;
                @ChangeWeapon2.performed -= m_Wrapper.m_GamePlayActionsCallbackInterface.OnChangeWeapon2;
                @ChangeWeapon2.canceled -= m_Wrapper.m_GamePlayActionsCallbackInterface.OnChangeWeapon2;
                @StaminaFull.started -= m_Wrapper.m_GamePlayActionsCallbackInterface.OnStaminaFull;
                @StaminaFull.performed -= m_Wrapper.m_GamePlayActionsCallbackInterface.OnStaminaFull;
                @StaminaFull.canceled -= m_Wrapper.m_GamePlayActionsCallbackInterface.OnStaminaFull;
                @ChangeWeapons.started -= m_Wrapper.m_GamePlayActionsCallbackInterface.OnChangeWeapons;
                @ChangeWeapons.performed -= m_Wrapper.m_GamePlayActionsCallbackInterface.OnChangeWeapons;
                @ChangeWeapons.canceled -= m_Wrapper.m_GamePlayActionsCallbackInterface.OnChangeWeapons;
            }
            m_Wrapper.m_GamePlayActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Atack.started += instance.OnAtack;
                @Atack.performed += instance.OnAtack;
                @Atack.canceled += instance.OnAtack;
                @Movement.started += instance.OnMovement;
                @Movement.performed += instance.OnMovement;
                @Movement.canceled += instance.OnMovement;
                @Jump.started += instance.OnJump;
                @Jump.performed += instance.OnJump;
                @Jump.canceled += instance.OnJump;
                @Interact.started += instance.OnInteract;
                @Interact.performed += instance.OnInteract;
                @Interact.canceled += instance.OnInteract;
                @Run.started += instance.OnRun;
                @Run.performed += instance.OnRun;
                @Run.canceled += instance.OnRun;
                @Crouch.started += instance.OnCrouch;
                @Crouch.performed += instance.OnCrouch;
                @Crouch.canceled += instance.OnCrouch;
                @Recharge.started += instance.OnRecharge;
                @Recharge.performed += instance.OnRecharge;
                @Recharge.canceled += instance.OnRecharge;
                @Heal.started += instance.OnHeal;
                @Heal.performed += instance.OnHeal;
                @Heal.canceled += instance.OnHeal;
                @MeleAtack.started += instance.OnMeleAtack;
                @MeleAtack.performed += instance.OnMeleAtack;
                @MeleAtack.canceled += instance.OnMeleAtack;
                @ChangeScene.started += instance.OnChangeScene;
                @ChangeScene.performed += instance.OnChangeScene;
                @ChangeScene.canceled += instance.OnChangeScene;
                @ChangeWeapon1.started += instance.OnChangeWeapon1;
                @ChangeWeapon1.performed += instance.OnChangeWeapon1;
                @ChangeWeapon1.canceled += instance.OnChangeWeapon1;
                @ChangeWeapon2.started += instance.OnChangeWeapon2;
                @ChangeWeapon2.performed += instance.OnChangeWeapon2;
                @ChangeWeapon2.canceled += instance.OnChangeWeapon2;
                @StaminaFull.started += instance.OnStaminaFull;
                @StaminaFull.performed += instance.OnStaminaFull;
                @StaminaFull.canceled += instance.OnStaminaFull;
                @ChangeWeapons.started += instance.OnChangeWeapons;
                @ChangeWeapons.performed += instance.OnChangeWeapons;
                @ChangeWeapons.canceled += instance.OnChangeWeapons;
            }
        }
    }
    public GamePlayActions @GamePlay => new GamePlayActions(this);

    // Menus&Pause
    private readonly InputActionMap m_MenusPause;
    private IMenusPauseActions m_MenusPauseActionsCallbackInterface;
    private readonly InputAction m_MenusPause_Pause;
    public struct MenusPauseActions
    {
        private @InputSystemActions m_Wrapper;
        public MenusPauseActions(@InputSystemActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @Pause => m_Wrapper.m_MenusPause_Pause;
        public InputActionMap Get() { return m_Wrapper.m_MenusPause; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(MenusPauseActions set) { return set.Get(); }
        public void SetCallbacks(IMenusPauseActions instance)
        {
            if (m_Wrapper.m_MenusPauseActionsCallbackInterface != null)
            {
                @Pause.started -= m_Wrapper.m_MenusPauseActionsCallbackInterface.OnPause;
                @Pause.performed -= m_Wrapper.m_MenusPauseActionsCallbackInterface.OnPause;
                @Pause.canceled -= m_Wrapper.m_MenusPauseActionsCallbackInterface.OnPause;
            }
            m_Wrapper.m_MenusPauseActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Pause.started += instance.OnPause;
                @Pause.performed += instance.OnPause;
                @Pause.canceled += instance.OnPause;
            }
        }
    }
    public MenusPauseActions @MenusPause => new MenusPauseActions(this);

    // BossTest
    private readonly InputActionMap m_BossTest;
    private IBossTestActions m_BossTestActionsCallbackInterface;
    private readonly InputAction m_BossTest__1;
    private readonly InputAction m_BossTest__2;
    private readonly InputAction m_BossTest__3;
    private readonly InputAction m_BossTest__4;
    private readonly InputAction m_BossTest__5;
    private readonly InputAction m_BossTest__6;
    public struct BossTestActions
    {
        private @InputSystemActions m_Wrapper;
        public BossTestActions(@InputSystemActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @_1 => m_Wrapper.m_BossTest__1;
        public InputAction @_2 => m_Wrapper.m_BossTest__2;
        public InputAction @_3 => m_Wrapper.m_BossTest__3;
        public InputAction @_4 => m_Wrapper.m_BossTest__4;
        public InputAction @_5 => m_Wrapper.m_BossTest__5;
        public InputAction @_6 => m_Wrapper.m_BossTest__6;
        public InputActionMap Get() { return m_Wrapper.m_BossTest; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(BossTestActions set) { return set.Get(); }
        public void SetCallbacks(IBossTestActions instance)
        {
            if (m_Wrapper.m_BossTestActionsCallbackInterface != null)
            {
                @_1.started -= m_Wrapper.m_BossTestActionsCallbackInterface.On_1;
                @_1.performed -= m_Wrapper.m_BossTestActionsCallbackInterface.On_1;
                @_1.canceled -= m_Wrapper.m_BossTestActionsCallbackInterface.On_1;
                @_2.started -= m_Wrapper.m_BossTestActionsCallbackInterface.On_2;
                @_2.performed -= m_Wrapper.m_BossTestActionsCallbackInterface.On_2;
                @_2.canceled -= m_Wrapper.m_BossTestActionsCallbackInterface.On_2;
                @_3.started -= m_Wrapper.m_BossTestActionsCallbackInterface.On_3;
                @_3.performed -= m_Wrapper.m_BossTestActionsCallbackInterface.On_3;
                @_3.canceled -= m_Wrapper.m_BossTestActionsCallbackInterface.On_3;
                @_4.started -= m_Wrapper.m_BossTestActionsCallbackInterface.On_4;
                @_4.performed -= m_Wrapper.m_BossTestActionsCallbackInterface.On_4;
                @_4.canceled -= m_Wrapper.m_BossTestActionsCallbackInterface.On_4;
                @_5.started -= m_Wrapper.m_BossTestActionsCallbackInterface.On_5;
                @_5.performed -= m_Wrapper.m_BossTestActionsCallbackInterface.On_5;
                @_5.canceled -= m_Wrapper.m_BossTestActionsCallbackInterface.On_5;
                @_6.started -= m_Wrapper.m_BossTestActionsCallbackInterface.On_6;
                @_6.performed -= m_Wrapper.m_BossTestActionsCallbackInterface.On_6;
                @_6.canceled -= m_Wrapper.m_BossTestActionsCallbackInterface.On_6;
            }
            m_Wrapper.m_BossTestActionsCallbackInterface = instance;
            if (instance != null)
            {
                @_1.started += instance.On_1;
                @_1.performed += instance.On_1;
                @_1.canceled += instance.On_1;
                @_2.started += instance.On_2;
                @_2.performed += instance.On_2;
                @_2.canceled += instance.On_2;
                @_3.started += instance.On_3;
                @_3.performed += instance.On_3;
                @_3.canceled += instance.On_3;
                @_4.started += instance.On_4;
                @_4.performed += instance.On_4;
                @_4.canceled += instance.On_4;
                @_5.started += instance.On_5;
                @_5.performed += instance.On_5;
                @_5.canceled += instance.On_5;
                @_6.started += instance.On_6;
                @_6.performed += instance.On_6;
                @_6.canceled += instance.On_6;
            }
        }
    }
    public BossTestActions @BossTest => new BossTestActions(this);
    public interface IGamePlayActions
    {
        void OnAtack(InputAction.CallbackContext context);
        void OnMovement(InputAction.CallbackContext context);
        void OnJump(InputAction.CallbackContext context);
        void OnInteract(InputAction.CallbackContext context);
        void OnRun(InputAction.CallbackContext context);
        void OnCrouch(InputAction.CallbackContext context);
        void OnRecharge(InputAction.CallbackContext context);
        void OnHeal(InputAction.CallbackContext context);
        void OnMeleAtack(InputAction.CallbackContext context);
        void OnChangeScene(InputAction.CallbackContext context);
        void OnChangeWeapon1(InputAction.CallbackContext context);
        void OnChangeWeapon2(InputAction.CallbackContext context);
        void OnStaminaFull(InputAction.CallbackContext context);
        void OnChangeWeapons(InputAction.CallbackContext context);
    }
    public interface IMenusPauseActions
    {
        void OnPause(InputAction.CallbackContext context);
    }
    public interface IBossTestActions
    {
        void On_1(InputAction.CallbackContext context);
        void On_2(InputAction.CallbackContext context);
        void On_3(InputAction.CallbackContext context);
        void On_4(InputAction.CallbackContext context);
        void On_5(InputAction.CallbackContext context);
        void On_6(InputAction.CallbackContext context);
    }
}
